
export const ru = {
  // General
  editor: 'Редактор',
  kinematics: 'Кинематика',
  analysis: 'Анализ',
  matrices: 'Матрицы',
  workspace: 'Роб. зона',
  ik: 'ОЗК',
  ikSolution: 'Решение ОЗК',
  showAxes: 'Показать оси',
  showCoordinates: 'Показать коорд.',
  reset: 'Сброс',
  calculate: 'Рассчитать',
  calculating: 'Вычисление...',

  // DH Panel
  dhParameters: 'Параметры Д-Х',
  dhParametersDescription: 'Настройте параметры для каждого звена робота-манипулятора.',
  addLink: 'Добавить звено',
  import: 'Импорт',
  export: 'Экспорт',
  exportToExcel: 'Экспорт в Excel',
  link: 'Звено',
  linkLength: 'aᵢ (длина)',
  linkTwist: 'αᵢ (скручивание)',
  linkOffset: 'dᵢ (смещение)',
  thetaOffset: 'θᵢ (смещ.)',
  dVariable: 'dᵢ (перем.)',
  jointAngle: 'θᵢ (поворот)',
  variable: 'Перем.',
  fixed: 'Фикс.',
  baseOrientation: 'Ориентация основания',

  // Kinematics Page
  kinematicsControl: 'Управление кинематикой',
  kinematicsControlDescription: 'Настройте переменные шарниры робота-манипулятора.',
  endEffectorPosition: 'Положение рабочего органа',
  noVariableParameters: 'Переменные параметры не определены. Перейдите в редактор, чтобы установить `d` как переменную или `theta` как нефиксированную.',
  offset: 'смещение',
  rotation: 'поворот',

  // Analysis Page
  kinematicPairsTableTitle: 'Таблица 1 - Кинематические пары',
  tableHeaderDesignation: 'Обозначение',
  tableHeaderLinks: 'Звенья',
  tableHeaderName: 'Название',
  tableHeaderClass: 'Класс',
  jointTypeRevolute: 'Вращательная',
  jointTypePrismatic: 'Поступательная',
  jointTypeFixed: 'Фиксированная',

  mechanismLinksTableTitle: 'Таблица 2 - Звенья механизма',
  tableHeaderMotionType: 'Вид движения',
  linkTypeBase: 'Стойка',
  linkTypeSlider: 'Ползун',
  linkTypeCrank: 'Кривошип',
  linkTypeFixed: 'Фиксированное',
  motionTypeTranslational: 'Поступательное',
  motionTypeRotational: 'Вращательное',

  eulerAnglesTableTitle: 'Таблица 3 - Углы Эйлера',
  baseTool: 'Стойка-Схват',
  
  // Matrices Page
  transformationMatrices: 'Символьные матрицы преобразования',
  transformationMatricesDescription: 'Символьное представление матрицы преобразования для каждого звена.',
  baseTransform: 'Преобразование основания',
  finalTransformationMatrix: 'Итоговая матрица преобразования',
  
  // IK Page
  ikSetup: 'Настройка Обратной Задачи Кинематики',
  ikSetupDescription: 'Определите целевое положение и ориентацию для рабочего органа.',
  targetPosition: 'Целевое положение',
  targetOrientation: 'Целевая ориентация',
  ikNotAvailable: 'Расчет ОЗК пока недоступен.',
  ikSolverSettings: 'Настройки решателя ОЗК',
  ikTolerance: 'Допуск',
  
  // IK Solution Page
  ikSolutionTitle: 'Алгоритмическое Решение ОЗК',
  ikSolutionDescription: 'На этой странице описывается алгоритм циклического координатного спуска (CCD), используемый для решения обратной задачи кинематики.',
  ikCcdAlgorithm: 'Алгоритм CCD',
  ikCcdAlgorithmDescription: 'Итерационный метод, который настраивает по одному суставу за раз, чтобы минимизировать расстояние между рабочим органом и целью.',
  ikIterationProcess: 'Итерационный процесс',
  ikIterationProcessStep1: '1. Начать с последнего сустава (n) и двигаться к основанию (сустав 1).',
  ikIterationProcessStep2: '2. Для каждого сустава вычислить необходимое вращение или перемещение, чтобы приблизить рабочий орган к цели.',
  ikIterationProcessStep3: '3. Применить изменение к переменной сустава (θᵢ или dᵢ), учитывая его ограничения.',
  ikIterationProcessStep4: '4. Обновить положение всей кинематической цепи.',
  ikIterationProcessStep5: '5. Повторять фиксированное количество итераций или до тех пор, пока рабочий орган не окажется достаточно близко к цели.',
  ikRevoluteJoints: 'Вращательные суставы (θᵢ)',
  ikRevoluteJointsDescription: 'Для вращательного сустава мы вычисляем угол Δθ, чтобы повернуть рабочий орган к цели.',
  ikRevoluteJointsExplanation: "Пусть <strong>J<sub>{index}</sub></strong> — положение текущего сустава, <strong>E</strong> — положение рабочего органа, а <strong>T</strong> — целевое положение. Пусть <strong>ось<sub>{index}</sub></strong> — ось вращения сустава.",
  ikRevoluteJointsAngle: "Угол Δθ — это знаковый угол между векторами V_JE и V_JT.",
  ikNewJointAngle: "Тогда новый угол сустава будет:",
  ikPrismaticJoints: 'Поступательные суставы (dᵢ)',
  ikPrismaticJointsDescription: 'Для поступательного сустава мы вычисляем расстояние Δd, чтобы переместить рабочий орган к цели вдоль оси сустава.',
  ikPrismaticJointsExplanation: "Пусть <strong>J<sub>{index}</sub></strong> — положение текущего сустава, <strong>E</strong> — положение рабочего органа, а <strong>T</strong> — целевое положение. Пусть <strong>ось<sub>{index}</sub></strong> — ось перемещения сустава.",
  ikPrismaticJointsDistance: "Изменение расстояния Δd — это разница в проекции векторов от рабочего органа до сустава и от цели до сустава на ось сустава.",
  ikNewJointDistance: "Тогда новое расстояние сустава будет:",
  noActiveJoints: 'В текущем механизме нет активных (переменных) суставов. Перейдите в редактор, чтобы включить их.',

  // Workspace Page
  workspaceVisualization: 'Ограничения рабочей зоны',
  workspaceVisualizationDescription: 'Определите минимальные и максимальные ограничения для каждого переменного сустава (qᵢ). Эти ограничения будут применяться к движениям робота в режимах Кинематики и ОЗК.',
};
